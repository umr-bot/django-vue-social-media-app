{"remainingRequest":"C:\\Users\\GhostlySteel\\Desktop\\master\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\GhostlySteel\\Desktop\\master\\frontend\\src\\store\\modules\\posts.js","dependencies":[{"path":"C:\\Users\\GhostlySteel\\Desktop\\master\\frontend\\src\\store\\modules\\posts.js","mtime":1591423793739},{"path":"C:\\Users\\GhostlySteel\\Desktop\\master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591385434777},{"path":"C:\\Users\\GhostlySteel\\Desktop\\master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1591385405969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/GhostlySteel/Desktop/master/frontend/src/store/modules/posts.js"],"names":["axios","state","posts","user","time","location","id","groupid","content","comments","isOpen","category","getters","allPosts","actions","fetchPosts","commit","addPost","groupID","now","Date","getTime","filterPosts","filterType","filterOption","console","log","setIsOpen","addComment","postID","mutations","changeIsOpen","i","length","setPosts","newPost","post","unshift","incrementPostIDs","plusComment","indx","postIsOpen","comment","sortPostsBy"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst state = {\r\n    posts: [{\r\n        user: 1,\r\n        time: 0,\r\n        location: 'Cape Town',\r\n        id: 1,\r\n        groupid: null,\r\n        content: 'Post 2',\r\n        comments: [{\r\n            id: 3,\r\n            content: 'Comment 3',\r\n            isOpen: false,\r\n            user: 1\r\n        },\r\n        {\r\n            id: 2,\r\n            content: 'Comment 2',\r\n            isOpen: false,\r\n            user: 1\r\n        },\r\n        {\r\n            id: 1,\r\n            content: 'Comment 1',\r\n            isOpen: false,\r\n            user: 1\r\n        }\r\n        ],\r\n        category: null\r\n    },\r\n    {\r\n        id: 2,\r\n        content: 'Post 1',\r\n        user: 1,\r\n        comments: [{\r\n            id: 3,\r\n            content: 'Comment 3',\r\n            isOpen: false,\r\n            user: 1\r\n        },\r\n        {\r\n            id: 2,\r\n            content: 'Comment 2',\r\n            isOpen: false,\r\n            user: 1\r\n        },\r\n        {\r\n            id: 1,\r\n            content: 'Comment 1',\r\n            isOpen: false,\r\n            user: 1\r\n        }\r\n        ]\r\n    }\r\n    ]\r\n};\r\n\r\nconst getters = {\r\n    allPosts: (state) => state.posts\r\n};\r\n\r\nconst actions = {\r\n\r\n    async fetchPosts({ commit }) {\r\n        //const response = await axios.get(\"http://127.0.0.1:8000/api/Post/\"); // TODO: setup backend to work with this part\r\n\r\n        commit('setPosts', state.posts);\r\n    },\r\n\r\n    async addPost({ commit }, {user, content, location, category, groupID}) {\r\n        //const response = await axios.post('https://jsonplaceholder.typicode.com/posts', { title, body }); // TODO: setup backend to work with this part\r\n\r\n        const now = new Date();\r\n        var time = now.getTime();\r\n        commit('incrementPostIDs')\r\n        commit('newPost', {user, content, time, location, category, groupID})\r\n    },\r\n\r\n    async filterPosts({ commit }, {filterType, filterOption}) {\r\n\r\n        console.log(filterType, filterOption);\r\n\r\n        //const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_filter=${filterType}'); // TODO: setup backend to work with this part\r\n\r\n        commit('sortPostsBy', {filterType, filterOption})\r\n        commit('setPosts', state.posts);\r\n    },\r\n\r\n    async setIsOpen ({ commit }, id) {\r\n        commit('changeIsOpen', id)\r\n    },\r\n\r\n    async addComment ({ commit }, {content, postID, user}) {\r\n        commit('plusComment', {content, postID, user})\r\n    }\r\n};\r\n\r\nconst mutations = {\r\n\r\n    changeIsOpen: (state, id) => {\r\n        for (let i = 0; i < state.posts[id-1].comments.length; i++) {\r\n            state.posts[id-1].comments[i].isOpen = !state.posts[id-1].comments[i].isOpen\r\n        }\r\n    },\r\n\r\n    setPosts: (state, posts) => (state.posts = posts),\r\n\r\n    newPost: (state, {user, content, time, location, category, groupID}) => {\r\n        const post = {\r\n            user: user,\r\n            id : 1,\r\n            content: content,\r\n            time: time,\r\n            location: location,\r\n            category: category,\r\n            groupid: groupID,\r\n            comments: []\r\n        };\r\n        state.posts.unshift(post);\r\n    },\r\n\r\n    incrementPostIDs: (state) => {\r\n        for (let i = 0; i < state.posts.length; i++) {\r\n            state.posts[i].id = state.posts[i].id + 1\r\n        }\r\n    },\r\n\r\n    plusComment: (state, {content, postID, user}) => {\r\n        var indx = 1;\r\n        var postIsOpen = false;\r\n        for (let i = 0; i < state.posts[postID-1].comments.length; i++) {\r\n            indx = i + 2\r\n            if (state.posts[postID-1].comments[i].isOpen == true) {\r\n                postIsOpen = true\r\n            }\r\n        }\r\n        const comment = {\r\n            id: indx,\r\n            content: content,\r\n            isOpen: postIsOpen,\r\n            user: user\r\n        };\r\n        state.posts[postID-1].comments.unshift(comment);\r\n    },\r\n\r\n    sortPostsBy: (state, {filterType, filterOption}) => {\r\n        switch (filterType) {\r\n            case 'Time':\r\n\r\n                switch (filterOption) {\r\n                    case 'Ascending':\r\n                        console.log(\"TODO: SORT BY ASCENDING ORDER ON BACK-END\")\r\n                        break;\r\n\r\n                    case 'Descending':\r\n                        console.log(\"TODO: SORT BY DESCENDING ORDER ON BACK-END\")\r\n                    break;    \r\n                \r\n                    default:\r\n                        console.log(\"SELECT A PROPER OPTION\")\r\n                        break;\r\n                }\r\n\r\n                break;\r\n\r\n            case 'Location':\r\n\r\n                console.log(\"Todo: SORT BY LOCATION ON SERVER SIDE USING: \", filterOption)\r\n\r\n                break;\r\n\r\n            case 'Category':\r\n\r\n                console.log(\"Todo: SORT BY CATEGORY ON SERVER SIDE USING: \", filterOption)\r\n\r\n                break;\r\n\r\n            case 'Group/User':\r\n\r\n                console.log(\"Todo: SORT BY GROUP/USER ON SERVER SIDE USING: \", filterOption)\r\n\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};"]}]}