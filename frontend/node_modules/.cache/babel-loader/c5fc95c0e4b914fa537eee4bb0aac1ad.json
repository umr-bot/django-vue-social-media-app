{"remainingRequest":"C:\\Users\\evgil_000\\Documents\\Work\\webdev\\Project3\\group1-rw334-project-2\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\evgil_000\\Documents\\Work\\webdev\\Project3\\group1-rw334-project-2\\frontend\\src\\store\\modules\\posts.js","dependencies":[{"path":"C:\\Users\\evgil_000\\Documents\\Work\\webdev\\Project3\\group1-rw334-project-2\\frontend\\src\\store\\modules\\posts.js","mtime":1591306999001},{"path":"C:\\Users\\evgil_000\\Documents\\Work\\webdev\\Project3\\group1-rw334-project-2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591191684154},{"path":"C:\\Users\\evgil_000\\Documents\\Work\\webdev\\Project3\\group1-rw334-project-2\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1591191671925}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvZXZnaWxfMDAwL0RvY3VtZW50cy9Xb3JrL3dlYmRldi9Qcm9qZWN0My9ncm91cDEtcnczMzQtcHJvamVjdC0yL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKdmFyIHN0YXRlID0gewogIHBvc3RzOiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhbGxQb3N0czogZnVuY3Rpb24gYWxsUG9zdHMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5wb3N0czsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGZldGNoUG9zdHM6IGZ1bmN0aW9uIGZldGNoUG9zdHMoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL1Bvc3QvIik7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIC8vIFRPRE86IHNldHVwIGJhY2tlbmQgdG8gd29yayB3aXRoIHRoaXMgcGFydAogICAgICAgICAgICAgIGNvbW1pdCgnc2V0UG9zdHMnLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGFkZFBvc3Q6IGZ1bmN0aW9uIGFkZFBvc3QoX3JlZjIsIF9yZWYzKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIGNvbW1pdCwgdXNlcklELCB0aXRsZSwgY29udGVudCwgbG9jYXRpb24sIGNhdGVnb3J5LCBncm91cElELCBub3csIHRpbWU7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIHVzZXJJRCA9IF9yZWYzLnVzZXJJRCwgdGl0bGUgPSBfcmVmMy50aXRsZSwgY29udGVudCA9IF9yZWYzLmNvbnRlbnQsIGxvY2F0aW9uID0gX3JlZjMubG9jYXRpb24sIGNhdGVnb3J5ID0gX3JlZjMuY2F0ZWdvcnksIGdyb3VwSUQgPSBfcmVmMy5ncm91cElEOwogICAgICAgICAgICAgIC8vY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMnLCB7IHRpdGxlLCBib2R5IH0pOyAvLyBUT0RPOiBzZXR1cCBiYWNrZW5kIHRvIHdvcmsgd2l0aCB0aGlzIHBhcnQKICAgICAgICAgICAgICBub3cgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICAgIHRpbWUgPSBub3cuZ2V0VGltZSgpOwogICAgICAgICAgICAgIGNvbW1pdCgnaW5jcmVtZW50UG9zdElEcycpOwogICAgICAgICAgICAgIGNvbW1pdCgnbmV3UG9zdCcsIHsKICAgICAgICAgICAgICAgIHVzZXJJRDogdXNlcklELAogICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgICAgICAgICAgY29udGVudDogY29udGVudCwKICAgICAgICAgICAgICAgIHRpbWU6IHRpbWUsCiAgICAgICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sCiAgICAgICAgICAgICAgICBjYXRlZ29yeTogY2F0ZWdvcnksCiAgICAgICAgICAgICAgICBncm91cElEOiBncm91cElECiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIGZpbHRlclBvc3RzOiBmdW5jdGlvbiBmaWx0ZXJQb3N0cyhfcmVmNCwgZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciBjb21taXQsIGZpbHRlclR5cGU7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgIGZpbHRlclR5cGUgPSBlLnRhcmdldC5vcHRpb25zW2UudGFyZ2V0Lm9wdGlvbnMuc2VsZWN0ZWRJbmRleF0uaW5uZXJUZXh0OwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGZpbHRlclR5cGUpOyAvL2NvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHM/X2ZpbHRlcj0ke2ZpbHRlclR5cGV9Jyk7IC8vIFRPRE86IHNldHVwIGJhY2tlbmQgdG8gd29yayB3aXRoIHRoaXMgcGFydAoKICAgICAgICAgICAgICBjb21taXQoJ3NvcnRQb3N0c0J5JywgZmlsdGVyVHlwZSk7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRQb3N0cycsIHN0YXRlLnBvc3RzKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRQb3N0czogZnVuY3Rpb24gc2V0UG9zdHMoc3RhdGUsIHBvc3RzKSB7CiAgICByZXR1cm4gc3RhdGUucG9zdHMgPSBwb3N0czsKICB9LAogIG5ld1Bvc3Q6IGZ1bmN0aW9uIG5ld1Bvc3Qoc3RhdGUsIF9yZWY1KSB7CiAgICB2YXIgdXNlcklEID0gX3JlZjUudXNlcklELAogICAgICAgIHRpdGxlID0gX3JlZjUudGl0bGUsCiAgICAgICAgY29udGVudCA9IF9yZWY1LmNvbnRlbnQsCiAgICAgICAgdGltZSA9IF9yZWY1LnRpbWUsCiAgICAgICAgbG9jYXRpb24gPSBfcmVmNS5sb2NhdGlvbiwKICAgICAgICBjYXRlZ29yeSA9IF9yZWY1LmNhdGVnb3J5LAogICAgICAgIGdyb3VwSUQgPSBfcmVmNS5ncm91cElEOwogICAgdmFyIHBvc3QgPSB7CiAgICAgIHVzZXJJZDogdXNlcklELAogICAgICB0aXRsZTogdGl0bGUsCiAgICAgIGlkOiAxLAogICAgICBjb250ZW50OiBjb250ZW50LAogICAgICB0aW1lOiB0aW1lLAogICAgICBsb2NhdGlvbjogbG9jYXRpb24sCiAgICAgIGNhdGVnb3J5OiBjYXRlZ29yeSwKICAgICAgZ3JvdXBpZDogZ3JvdXBJRAogICAgfTsKICAgIHN0YXRlLnBvc3RzLnVuc2hpZnQocG9zdCk7CiAgfSwKICBpbmNyZW1lbnRQb3N0SURzOiBmdW5jdGlvbiBpbmNyZW1lbnRQb3N0SURzKHN0YXRlKSB7CiAgICB2YXIgaSA9IDA7CgogICAgZm9yIChpID0gMDsgaSA8IHN0YXRlLnBvc3RzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHN0YXRlLnBvc3RzW2ldLmlkID0gc3RhdGUucG9zdHNbaV0uaWQgKyAxOwogICAgfQogIH0sCiAgc29ydFBvc3RzQnk6IGZ1bmN0aW9uIHNvcnRQb3N0c0J5KHN0YXRlLCBmaWx0ZXJUeXBlKSB7CiAgICBzd2l0Y2ggKGZpbHRlclR5cGUpIHsKICAgICAgY2FzZSAnVGltZSc6CiAgICAgICAgY29uc29sZS5sb2coIlRvZG86IFNPUlQgQlkgVElNRSBPTiBTRVJWRVIgU0lERSIpOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAnTG9jYXRpb24nOgogICAgICAgIGNvbnNvbGUubG9nKCJUb2RvOiBTT1JUIEJZIExPQ0FUSU9OIE9OIFNFUlZFUiBTSURFIik7CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlICdDYXRlZ29yeSc6CiAgICAgICAgY29uc29sZS5sb2coIlRvZG86IFNPUlQgQlkgQ0FURUdPUlkgT04gU0VSVkVSIFNJREUiKTsKICAgICAgICBicmVhazsKCiAgICAgIGNhc2UgJ0dyb3VwL1VzZXInOgogICAgICAgIGNvbnNvbGUubG9nKCJUb2RvOiBTT1JUIEJZIEdST1VQL1VTRVIgT04gU0VSVkVSIFNJREUiKTsKICAgICAgICBicmVhazsKCiAgICAgIGRlZmF1bHQ6CiAgICAgICAgYnJlYWs7CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["C:/Users/evgil_000/Documents/Work/webdev/Project3/group1-rw334-project-2/frontend/src/store/modules/posts.js"],"names":["axios","state","posts","getters","allPosts","actions","fetchPosts","commit","get","response","data","addPost","userID","title","content","location","category","groupID","now","Date","time","getTime","filterPosts","e","filterType","target","options","selectedIndex","innerText","console","log","mutations","setPosts","newPost","post","userId","id","groupid","unshift","incrementPostIDs","i","length","sortPostsBy"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst state = {\r\n    posts: []\r\n};\r\n\r\nconst getters = {\r\n    allPosts: (state) => state.posts\r\n};\r\n\r\nconst actions = {\r\n    async fetchPosts({ commit }) {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/Post/\"); // TODO: setup backend to work with this part\r\n\r\n        commit('setPosts', response.data);\r\n    },\r\n    async addPost({ commit }, {userID, title, content, location, category, groupID}) {\r\n        //const response = await axios.post('https://jsonplaceholder.typicode.com/posts', { title, body }); // TODO: setup backend to work with this part\r\n\r\n        const now = new Date();\r\n        var time = now.getTime();\r\n        commit('incrementPostIDs')\r\n        commit('newPost', {userID, title, content, time, location, category, groupID})\r\n    },\r\n    async filterPosts({ commit }, e) {\r\n        const filterType = e.target.options[e.target.options.selectedIndex].innerText;\r\n\r\n        console.log(filterType);\r\n\r\n        //const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_filter=${filterType}'); // TODO: setup backend to work with this part\r\n\r\n        commit('sortPostsBy', filterType)\r\n        commit('setPosts', state.posts);\r\n    }\r\n};\r\n\r\nconst mutations = {\r\n    setPosts: (state, posts) => (state.posts = posts),\r\n    newPost: (state, {userID, title, content, time, location, category, groupID}) => {\r\n        const post = {\r\n            userId: userID,\r\n            title: title,\r\n            id : 1,\r\n            content: content,\r\n            time: time,\r\n            location: location,\r\n            category: category,\r\n            groupid: groupID\r\n        };\r\n        state.posts.unshift(post);\r\n    },\r\n    incrementPostIDs: (state) => {\r\n        var i = 0;\r\n        for (i = 0; i < state.posts.length; i++) {\r\n            state.posts[i].id = state.posts[i].id + 1\r\n        }\r\n    },\r\n    sortPostsBy: (state, filterType) => {\r\n        switch (filterType) {\r\n            case 'Time':\r\n\r\n                console.log(\"Todo: SORT BY TIME ON SERVER SIDE\")\r\n\r\n                break;\r\n\r\n            case 'Location':\r\n\r\n                console.log(\"Todo: SORT BY LOCATION ON SERVER SIDE\")\r\n\r\n                break;\r\n\r\n            case 'Category':\r\n\r\n                console.log(\"Todo: SORT BY CATEGORY ON SERVER SIDE\")\r\n\r\n                break;\r\n\r\n            case 'Group/User':\r\n\r\n                console.log(\"Todo: SORT BY GROUP/USER ON SERVER SIDE\")\r\n\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};"]}]}